name: Publish Nightlio images to GHCR

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Metadata for API image
      - name: Docker metadata (API)
        id: meta_api
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}-api
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      # Metadata for Frontend image
      - name: Docker metadata (Frontend)
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}-frontend
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      # Work around npm optional deps bug for Rollup on arm64 by removing the
      # lockfile and reinstalling deps in the workspace before Docker build.
      - name: Set up Node.js for workaround
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Clean lockfile and reinstall deps (frontend)
        run: |
          rm -rf node_modules package-lock.json
          npm install --no-audit --no-fund

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            VITE_API_URL=/api
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_web.outputs.tags }}
          labels: ${{ steps.meta_web.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max